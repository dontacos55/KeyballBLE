#define ZMK_POINTING_DEFAULT_SCRL_VAL 120    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        migi {
            bindings = <&mkp RCLK>;
            key-positions = <19 20>;
        };

        hidari {
            bindings = <&mkp LCLK>;
            key-positions = <19 18>;
        };

        naka {
            bindings = <&mkp MCLK>;
            key-positions = <19 30>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <10 12>;
        };

        esc {
            bindings = <&kp ESC>;
            key-positions = <0 2>;
        };
    };

    macros {
        at: to_layer_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANGUAGE_2 &kp AT_SIGN>;
            label = "TO_LAYER_0";
        };

        akko: akko {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANGUAGE_1 &kp LEFT_BRACKET &kp RIGHT_BRACKET &kp ENTER &kp LEFT_ARROW>;
            label = "AKKO";
        };

        kakko2: kakko2 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LANGUAGE_2 &kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp LEFT_ARROW>;
            label = "KAKKO2";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&at>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        ROTATE: ROTATE {
            compatible = "zmk,behavior-sensor-rotate-var";
            label = "ROTATE";
            #sensor-binding-cells = <2>;
            bindings = <&msc>, <&msc>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R           &kp T                                           &kp Y          &kp U    &kp I        &kp O    &kp P
&kp A             &lt 6 S       &kp D         &lt 1 F         &kp G        &mkp RCLK             &kp MINUS    &kp H          &kp J    &kp K        &kp L    &at
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V           &lt 6 B      &mkp LCLK             &lt 3 SLASH  &lt 1 N        &lt 5 M  &lt 5 COMMA  &kp DOT  &kp UP_ARROW
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &kp LANGUAGE_1  &lt 2 SPACE  &lt 3 LANGUAGE_2      &lt 2 ENTER  &kp BACKSPACE                                 &kp DOWN_ARROW
            >;

            sensor-bindings = <&ROTATE SCRL_DOWN SCRL_UP>;
        };

        FUNCTION {
            bindings = <
&kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp ASTERISK  &kp SLASH                       &kp F1  &kp F2  &kp F3  &kp F4  &kp F5
&kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &trans        &trans     &trans      &kp F13  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10
&kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PLUS      &kp MINUS  &trans      &trans   &trans  &trans  &trans  &trans  &kp F11
&kp KP_NUMBER_0  &kp KP_N0        &kp DOT          &kp EQUAL     &trans     &trans      &trans   &trans                          &kp F12
            >;
        };

        NUM {
            bindings = <
&kp MINUS                   &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp PLUS                                                   &kp CARET        &kp AMPERSAND  &kp TILDE  &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&kp SLASH                   &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp ASTERISK  &kp LC(LA(KP_NUMBER_0))      &kp COLON       &kp EXCLAMATION  &kp QUESTION   &kp HASH   &kp DOLLAR        &kp PERCENT
&mt LEFT_SHIFT KP_NUMBER_0  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp PERIOD    &kp EQUAL                    &kp LEFT_ARROW  &kp RIGHT_ARROW  &kp TILDE      &akko      &kakko2           &kp BACKSLASH
&trans                      &trans           &trans           &trans           &trans        &trans                       &trans          &trans                                                       &kp PIPE
            >;
        };

        ARROW {
            bindings = <
&kp ESCAPE      &kp LC(LS(TAB))         &kp UP_ARROW    &kp LC(TAB)              &trans                       &trans  &kp LG(LEFT_ARROW)      &kp UP_ARROW    &kp LG(RIGHT_ARROW)      &trans
&kp HOME        &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp END  &trans      &trans  &trans  &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &trans
&kp LEFT_SHIFT  &kp LG(LS(LEFT_ARROW))  &trans          &kp LG(LS(RIGHT_ARROW))  &trans   &trans      &trans  &trans  &kp LG(LC(LEFT_ARROW))  &trans          &kp LG(LC(RIGHT_ARROW))  &trans
&trans          &trans                  &trans          &trans                   &trans   &trans      &trans  &trans                                                                   &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans    &trans     &trans     &trans     &trans                           &trans  &trans  &trans  &trans  &trans
&mkp MB4  &mkp LCLK  &mkp MCLK  &mkp RCLK  &mkp MB5  &mkp LCLK      &trans  &trans  &trans  &trans  &trans  &trans
&trans    &trans     &trans     &trans     &trans    &mkp RCLK      &trans  &trans  &trans  &trans  &trans  &trans
&trans    &trans     &trans     &trans     &trans    &trans         &trans  &trans                          &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans     &trans          &trans     &trans                            &trans  &trans  &trans  &trans  &trans
&trans  &kp LANG5  &kp LANG6       &kp LANG7  &kp LANG8  &kp LANG9      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LANG1  &kp LANGUAGE_2  &kp LANG3  &kp LANG4  &trans         &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans     &trans          &trans     &trans     &trans         &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&kp LA(F4)  &trans  &trans     &trans         &trans                                        &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans      &trans  &kp LC(C)  &kp LC(X)      &trans     &trans             &studio_unlock  &trans        &trans        &trans        &trans        &trans
&trans      &trans  &kp LC(Z)  &kp LC(LS(Z))  &trans     &kp LG(LS(S))      &bootloader     &trans        &trans        &trans        &trans        &bt BT_CLR
&trans      &trans  &trans     &trans         &kp LC(V)  &kp LC(V)          &trans          &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
